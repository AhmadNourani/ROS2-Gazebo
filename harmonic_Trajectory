import numpy as np
import matplotlib.pyplot as plt

def generate_harmonic_trajectory(duration, frequency, amplitude):
    timesteps = np.linspace(0, duration, num=1000)
    
    
    joint_trajectories = []
    for dof in range(6):
        phase_shift = dof * np.pi / 3  # Phase shift for each joint
        
        
        joint_trajectory = amplitude * np.sin(2 * np.pi * frequency * timesteps + phase_shift)
        joint_trajectories.append(joint_trajectory)
    
    
    trajectory = np.vstack(joint_trajectories).T
    
    return trajectory

# Parameters
duration = 20.0  # seconds
frequency = 0.25  # Hz
amplitude = np.pi / 8  # radians


trajectory = generate_harmonic_trajectory(duration, frequency, amplitude)


print("Generated Harmonic Trajectory Shape:", trajectory.shape)


plt.figure(figsize=(10, 6))
for dof in range(6):
    plt.plot(trajectory[:, dof], label=f"Joint {dof + 1}")
plt.title("Harmonic Trajectory for a 6-DOF Robot")
plt.xlabel("Time Step")
plt.ylabel("Joint Angle (radians)")
plt.legend()
plt.grid(True)
plt.show()
